prometheus:
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: yc-network-hdd
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    shards: null
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.158.160.45.164.sslip.io

grafana:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      cert-manager.io/acme-challenge-type: http01
    hosts:
      - grafana.158.160.45.164.sslip.io
    tls:
    - secretName: grafana.158.160.45.164.sslip.io
      hosts:
        - grafana.158.160.45.164.sslip.io
  ## Configure additional grafana datasources (passed through tpl)
  ## ref: http://docs.grafana.org/administration/provisioning/#datasources
  additionalDataSources:
    - name: Loki
      access: proxy
      #   basicAuth: true
      #   basicAuthPassword: pass
      #   basicAuthUser: daco
      #   editable: false
      jsonData:
        maxLines: 1000
      #   orgId: 1
      type: loki
      url: http://loki-stack.logging.svc:3100
      version: 1

#    datasources.yaml:
#      apiVersion: 1
#      datasources:
#        - name: Loki
#          type: loki
#          access: proxy
#          url: http://loki-stack.logging.svc:3100
#          jsonData:
#            maxLines: 1000

prometheusOperator:
  admissionWebhooks:
    enabled: false
    patch:
      enabled: false
  tlsProxy:
    enabled: false
  tls:
    enabled: false

alertmanager:
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - alertmanager.158.160.45.164.sslip.io

  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: yc-network-hdd
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
